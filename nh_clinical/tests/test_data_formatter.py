# Part of NHClinical. See LICENSE file for full copyright and licensing details
# -*- coding: utf-8 -*-
from openerp.tests import common


class TestPatientDataFormatter(common.TransactionCase):
    """
    Test the formatting of patient's data.

    This formatting is executed while creating / updating patient's data
    and it's particularly useful when accepting data from external sources,
    like importing data from CSV files generated by third party systems.
    """

    def setUp(self):
        super(TestPatientDataFormatter, self).setUp()
        self.patient = self.registry('nh.clinical.patient')

    # Test related to Hospital Number formatting
    def test_formatting_hospital_number_with_whitespaces(self):
        fields = [
            'other_identifier',
        ]
        data = [
            ('HOSP NUMB 007',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('other_identifier', fields)
        self.assertEqual(data[0][0], 'HOSPNUMB007')

    def test_formatting_hospital_number_with_hyphens(self):
        fields = [
            'other_identifier',
        ]
        data = [
            ('HOSP-NUMB-007',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('other_identifier', fields)
        self.assertEqual(data[0][0], 'HOSPNUMB007')

    def test_formatting_hospital_number_with_non_alphanumeric_characters(self):
        fields = [
            'other_identifier',
        ]
        data = [
            ('£H-O/S+P_N%U@M#B=0)0(7$',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('other_identifier', fields)
        self.assertEqual(data[0][0], 'HOSPNUMB007')

    # Test related to NHS Number formatting
    def test_formatting_NHS_number_with_whitespaces(self):
        fields = [
            'patient_identifier',
        ]
        data = [
            ('NHS NUMB 047',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('patient_identifier', fields)
        self.assertEqual(data[0][0], 'NHSNUMB047')

    def test_formatting_NHS_number_with_hyphens(self):
        fields = [
            'patient_identifier',
        ]
        data = [
            ('NHS-NUMB-047',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('patient_identifier', fields)
        self.assertEqual(data[0][0], 'NHSNUMB047')

    def test_formatting_NHS_number_with_non_alphanumeric_characters(self):
        fields = [
            'patient_identifier',
        ]
        data = [
            ('^N_H+S-N=U!M|B*0/4£7&',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('patient_identifier', fields)
        self.assertEqual(data[0][0], 'NHSNUMB047')

    def test_formatting_date_with_no_time_specified(self):
        fields = [
            'dob',
        ]
        data = [
            ('2013-10-28',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('dob', fields)
        self.assertEqual(data[0][0], '2013-10-28 00:00:00')

    def test_formatting_date_supplied_as_day_month_year(self):
        fields = [
            'dob',
        ]
        data = [
            ('29-01-2004',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('dob', fields)
        self.assertEqual(data[0][0], '2004-01-29 00:00:00')

    def test_formatting_date_supplied_as_month_day_year(self):
        fields = [
            'dob',
        ]
        data = [
            ('01-28-2015',)
        ]
        self.patient.format_data(fields, data)
        self.assertIn('dob', fields)
        self.assertEqual(data[0][0], '2015-01-28 00:00:00')
